<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($rootScope,$timeout,$scope) {
  /* widget controller */
  var c = this;
	
	$timeout(function(){
		$rootScope.$broadcast('sp.update.breadcrumbs',[{"label":"Servers","url":"?id=cisco_servers"},{"label":c.data.server_name,"url":"#"}]);
	},10);
	
	//check if json object is empty
		$scope.isempty=function(data){
		return (Object.keys(data).length>0) ? true : false;
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>ul{
  padding:0;
list-style-type:none;
}
li{
  padding-top:10px;
  padding-bottom:10px;
  
}

.properties-container{
height:710px;
}
.power-status-on {
  font-size: 12px;
  border-radius: 3px;
  margin-left: 10px;
  padding: 5px 10px 5px 10px;
  background: #e1f1e3; 
}
.power-status-off {
  font-size: 12px;
  border-radius: 3px;
  margin-left: 10px;
  padding: 5px 10px 5px 10px;
  background: #EFD0D4; 
  color:#000000;
}
.glyphicon-on{
  color: green;
  font-size: 12px;
}
.glyphicon-off{
  color: #FFFFFF;
  font-size: 12px;
}
.tags-list{
 
		padding:0px !important;
 
}
.main-container{
 font-family:"Roboto",sans-serif;
  font-size:14px;
}
.tag{
  
  //padding-right: 7.5px;
//  padding-left: 7.5px;
  //height: 24px;
  //width:10px;
  padding:5px 10px 5px 10px;
  margin:2px;
  min-width:100px;
  background-color: #ecedf1;
  border-radius: 3px;
  overflow: hidden;
  
}

.health-status-critical {
  min-width:100px;
  font-size: 12px;
  border-radius: 4px;
  z-index:2;
  padding: 5px 10px 5px 10px;
  background-color: #E85454;
  color:#ffffff;
}


.health-status-warning {
  font-size: 12px;
  border-radius: 4px;
  z-index:2;
 // margin-left:2px;
  padding: 5px 5px 5px 10px;
  background-color: #FFA000;
  color:#ffffff;
}


.health-status-healthy {
  font-size: 12px;
  border-radius: 4px;
  z-index:2;
 // margin-left:2px;
  padding: 5px 5px 5px 10px;
  background-color: #66BB6A;
  color:#ffffff;
}

.health-status-info {
 	font-size: 12px;
  border-radius: 4px;
  z-index:2;
 // margin-left:2px;
  padding: 5px 5px 5px 10px;
  background-color: #0095D3;
  color:#ffffff;
}

.value{
float:right;
  text-align:right;
}
.key{
  float:left;
}
.details-header{
background-color:#1F2D3D ;
  color:#FFFFFF;
}
.horizontal-separator{
width:100%;
  height:1px;
  background-color:rgba(80, 85, 107, 0.15000000596046448);
  margin-top:15px;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>cisco_servers_details</id>
        <internal>false</internal>
        <link/>
        <name>cisco_servers_details</name>
        <option_schema>[{"name":"type","section":"other","label":"Type","type":"string"}]</option_schema>
        <public>false</public>
        <roles>x_caci_cisco_inter.intersight_user</roles>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	var table=$sp.getParameter('table');
	var sys_id=$sp.getParameter('sys_id');
	var daoScript = new Cisco_DAOScript();
	var sn_logger=new Cisco_SNLogger();
	
	//gliderecord on table in the url
	try{
		sn_logger.debug('cisco_servers_details : Inside gliderecord query to fetch record')
		var serverGR=new GlideRecordSecure(table);
		serverGR.get(sys_id);
		data.server_name=(serverGR.name)?serverGR.name+'':'-';
		data.server_detail_json={};
		var details=[];
		var properties=[];
		var tags={};
		if(options.type=="Details"){
			sn_logger.debug('cisco_servers_details : Inside gliderecord query to fetch server details')
			details=[{
				"key":"Name",
				"value":(serverGR.name)?serverGR.name+'':'-'
			},
							 {
								 "key":"Health",
								 "value":daoScript.getHealth(serverGR.sys_id)+''
							 },
							 {
								 "key":"User Label",
								 "value":(serverGR.user_label)?serverGR.user_label+'':'-'
							 },
							 {
								 "key":"Management IP Address",
								 "value":(serverGR.mgmt_ip_address)?serverGR.mgmt_ip_address+'':'-'
							 },
							 {
								 "key":"Serial",
								 "value":(serverGR.serial_number)?serverGR.serial_number+'':'-'
							 },
							 {
								 "key":"PID",
								 "value":(serverGR.model_number)?serverGR.model_number+'':'-'
							 },
							 {
								 "key":"Vendor",
								 "value":(serverGR.vendors)?serverGR.vendors+'':'-'
							 },
							 {
								 "key":"Revision",
								 "value":(serverGR.revision)?serverGR.revision+'':'-'
							 },
							 {
								 "key":"Asset Tag",
								 "value":(serverGR.asset_tag)?serverGR.asset_tag+'':'-'
							 },
							 {
								 "key":"Firmware Version",
								 "value":(serverGR.firmware)?serverGR.firmware+'':'-'
							 }];
		}
		else if(options.type=="Properties"){
			sn_logger.debug('cisco_servers_details : Inside gliderecord query to fetch server properties')
			properties=[
				{
					"key":"Power",
					"value":(serverGR.power)?serverGR.power.toUpperCase()+'':'-'
				},
				{
					"key":"CPUs",
					"value":(serverGR.numcpus)?serverGR.numcpus+'':'-'
				},
				{
					"key":"Threads",
					"value":(serverGR.numthreads)?serverGR.numthreads+'':'-'
				},
				{
					"key":"CPU Cores",
					"value":(serverGR.numcpucores)?serverGR.numcpucores+'':'-'
				},
				{
					"key":"CPU Cores Enabled",
					"value":(serverGR.number_of_cpu_cores_enabled)?serverGR.number_of_cpu_cores_enabled+'':'-'
				},
				{
					"key":"Memory Capacity(GB)",
					"value":(serverGR.totalmemory)?serverGR.totalmemory+' GB':'-'
				},
				{
					"key":"CPU Capacity",
					"value":(serverGR.cpu_capacity)?serverGR.cpu_capacity+' GHz':'-'
				},
				{
					"key":"ID",
					"value":(serverGR.serverid)?serverGR.serverid+'':'-'
				},
				{
					"key":"Adapters",
					"value":(serverGR.numadaptors)?serverGR.numadaptors+'':'-'
				},
				{
					"key":"NIC Interfaces",
					"value":(serverGR.numethhostinterfaces)?serverGR.numethhostinterfaces+'':'-'
				},
				{
					"key":"HBA Interfaces",
					"value":(serverGR.numfchostinterfaces)?serverGR.numfchostinterfaces+'':'-'
				},
				{
					"key":"UUID",
					"value":(serverGR.uuid)?serverGR.uuid+'':'-'
				}];

		}
		else if(options.type=="Tags"){
			sn_logger.debug('cisco_servers_details : Inside gliderecord query to fetch server tags')
			tags=serverGR.tags;
		}
		data.server_detail_json.details=details;
		data.server_detail_json.properties=properties;
		data.server_detail_json.tags=tags;
	}catch(e){
		sn_logger.error('cisco_servers_details : '+e);
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>gurjotjoshi</sys_created_by>
        <sys_created_on>2019-02-27 07:15:00</sys_created_on>
        <sys_id>a5bbf6b6db736300a4e47befbf961938</sys_id>
        <sys_mod_count>318</sys_mod_count>
        <sys_name>cisco_servers_details</sys_name>
        <sys_package display_value="Cisco Intersight ITSM Plugin" source="x_caci_cisco_inter">baef2ff5db132300d7b59235ca9619e3</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cisco Intersight ITSM Plugin">baef2ff5db132300d7b59235ca9619e3</sys_scope>
        <sys_update_name>sp_widget_a5bbf6b6db736300a4e47befbf961938</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-03-26 10:56:26</sys_updated_on>
        <template><![CDATA[<div class="main-container">
  <div class="panel panel-default">
  <div class="panel-heading details-header">
    <h3 class="panel-title">{{c.options.type}}</h3>
  </div>
  <div class="panel-body" ng-class="{'properties-container':c.options.type=='Properties','details-container':c.options.type=='Details'}">
    <ul ng-class="{'list-inline':c.options.type=='Tags'}">
      <li ng-if="c.options.type=='Details'" ng-repeat="item in c.data.server_detail_json.details" class="row">
        <div class="key col-md-6">{{item.key}}</div>
        
        <div class="value col-md-6" ng-if="item.key!='Health'">{{item.value}}</div>
        
        <div ng-if="item.key=='Health' && item.value=='Critical'" class="value col-md-6"> <span class="health-status-critical">Critical &nbsp <i style="font-size:12px" class="glyphicon glyphicon-remove"></i></span></div>
        <div ng-if="item.key=='Health' && item.value=='Warning'" class="value col-md-6"> <span class="health-status-warning">Warning &nbsp <i style="font-size:12px" class="fa">&#xf071;</i></span></div>
        <div ng-if="item.key=='Health' && item.value=='Healthy'" class="value col-md-6"><span class="health-status-healthy">Healthy &nbsp <i style="font-size:12px" class="fa">&#xf00c;</i></span></div>
        <div ng-if="item.key=='Health' && item.value=='Info'" class="value col-md-6"><span class="health-status-info">Info &nbsp <i style="font-size:12px" class="fa">&#xf00c;</i></span></div>
       
        <br/>
        <div ng-if="item.key=='Health'||item.key=='Asset Tag'" class="horizontal-separator">
        </div>
      </li>
      
      <li ng-if="c.options.type=='Properties'" ng-repeat="item in c.data.server_detail_json.properties">
        <span class="key">{{item.key}}</span>
        <span class="value" ><span ng-if="item.key!='Power'">{{item.value}}</span>
        <span ng-class="{'power-status-on':item.value=='ON','power-status-off':item.value=='OFF'}" ng-if="item.key=='Power'">&nbsp;&nbsp;{{item.value}}&nbsp;&nbsp;</span>
        </span>
        <br/>
        
        <div ng-if="item.key=='Power'||item.key=='CPU Capacity'" class="horizontal-separator">
          
        </div>
      </li>
 
      <div ng-init="render = isempty(c.data.server_detail_json.tags)" ng-if="c.options.type=='Tags' " class="list-inline">
      <li class="tags-list" ng-if="render" ng-repeat="(key, value) in c.data.server_detail_json.tags">
        <div class="tag">
          <span>{{key}}</span>
        <span>: {{value}}</span>
        </div>
      </li> 
     	<h5 ng-if="!render" style="text-align:center">
        No Tags Found
     </h5>
    </div>
   </ul>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
